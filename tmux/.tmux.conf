# set default shell:
set-option -g default-shell $SHELL
set-option -g status-utf8 on

# tell tmux to use 256 colour terminal with italics support:
#
# tmux supports italics, yet uses Screen's terminfo. Work is underway to create a
# Tmux terminfo to be added to the terminfo database. As it will need some time
# to trickle down to distros, we are going to make our own Tmux terminfo until
# that day arrives.
# Put the term we have created in dotfiles/tmux/.terminfo/
# set -g default-terminal "screen-256color"
# set -g default-terminal "tmux-256color"	# FIXME: right now using tmux-256color breaks dircolors, debian bug #791921

# tmux passes focus events to the programs running on it:
set -g focus-events on

# keybindings:
# command prefix:
set-option -g prefix C-space
bind-key C-space send-prefix
# prefix+? List all keybindings

# panes start at 1 instead of 0
set-option -g base-index 1
set-option -g pane-base-index 1

# window title:
set-option -g set-titles on
set-option -g set-titles-string '#{pane_current_command}'
set-window-option -g automatic-rename on

# current window navigation:
set-window-option -g mode-mouse on
# set -g mode-mouse on
set -g mouse-select-window on

# Sane scrolling, allow mouse outside boundaries
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# resizing:
bind-key -r C-h resize-pane -L
bind-key -r C-j resize-pane -D
bind-key -r C-k resize-pane -U
bind-key -r C-l resize-pane -R
# resize panes with mouse (drag borders)
set -g mouse-select-pane on
set -g mouse-resize-pane on
setw -g aggressive-resize on

# splitting and cycling:
unbind %
bind-key - split-window -v
unbind '"'
bind-key | split-window -h

bind-key C-a last-window
bind-key C-n next-window
bind-key C-p previous-window

# join windows:
bind-key S choose-window "join-pane -v -s "%%""
bind-key V choose-window "join-pane -h -s "%%""

# Set window notifications
setw -g monitor-activity on
set -g visual-activity on

# status bar:
# source file created with vim plugin tmuxline into tmux.conf
if-shell "test -f ~/.tmux/tmuxline" "source ~/.tmux/tmuxline"

# enable vim mode
setw -g mode-keys vi
set-option -g status-keys vi

# y and p as in vim
bind Escape copy-mode
unbind p
bind p paste-buffer
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'y' copy-selection
bind -t vi-copy 'Space' halfpage-down
bind -t vi-copy 'Bspace' halfpage-up

#  # extra commands for interacting with the ICCCM clipboard
#  bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
#  bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux
#  paste-buffer"

# Smart pane switching with awareness of vim splits
 is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
 bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
 bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
 bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
 bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
 bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# TMUX PLUGINS
# List of plugins
# Supports `github_username/repo` or full git repo URLs
set -g @tpm_plugins '            \
tmux-plugins/tpm                 \
tmux-plugins/tmux-resurrect      \
'
# Other examples:
# github_username/plugin_name    \
# git@github.com/user/plugin     \
# git@bitbucket.com/user/plugin  \

# TMUX OPTIONS
# tmux-resurrect:
# Only a conservative list of programs is restored by default:
# vi vim nvim emacs man less more tail top htop irssi.
# added new programs to be restored:
set -g @resurrect-processes 'vman ssh weechat cmus vi vim nvim emacs man mutt tig less more tail top htop irssi'

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run-shell '~/.tmux/plugins/tpm/tpm'
