# set default shell:
set-option -g default-shell $SHELL
set-option -g status-utf8 on

# tell tmux to use 256 colour terminal with italics support:
#
# tmux supports italics, yet uses Screen's terminfo. Work is underway to create a
# Tmux terminfo to be added to the terminfo database. As it will need some time
# to trickle down to distros, we are going to make our own Tmux terminfo until
# that day arrives.
# Put the term we have created in dotfiles/tmux/.terminfo/
# set -g default-terminal "screen-256color"
set-option -g default-terminal "tmux-256color"	# FIXME: right now using tmux-256color breaks dircolors, debian bug #791921

# enable mouse modes:
set-window-option -g mode-mouse on
set-option -g mouse-select-window on
set-option -g mouse-select-pane on
set-option -g mouse-resize-pane on
# only pad with dots on the window currently shared:
set-window-option -g aggressive-resize on
# Sane scrolling, allow mouse outside boundaries:
set-option -g terminal-overrides 'xterm*:smcup@:rmcup@'

# tmux passes focus events to the programs running on it:
set-option -g focus-events on

# rebind prefix:
set-option -g prefix C-space
bind-key C-space send-prefix

# no delay between commands (better for vim):
set-option -s escape-time 0

# lengthen the history limit (default 2000):
set-option -g history-limit 10000

# panes start at 1 instead of 0
set-option -g base-index 1
set-option -g pane-base-index 1

# window title:
set-option -g set-titles on
set-option -g set-titles-string '#{pane_current_command}'
set-window-option -g automatic-rename on

# pane resizing:
bind-key -r C-h resize-pane -L
bind-key -r C-j resize-pane -D
bind-key -r C-k resize-pane -U
bind-key -r C-l resize-pane -R

# window movement:
unbind h
bind h previous-window
unbind l
bind l next-window
unbind L
bind L last-window

# splitting and cycling:
unbind %
bind-key - split-window -v
unbind '"'
bind-key | split-window -h

# join windows:
bind-key S choose-window "join-pane -v -s "%%""
bind-key V choose-window "join-pane -h -s "%%""

# Set window notifications
set-option -g bell-action any
set-option -g visual-bell on
set -g window-status-activity-style blink
set -g monitor-activity on
# no message "activity on window 2":
set-option -g visual-activity off

# status bar:
# source file created with vim plugin tmuxline into tmux.conf
if-shell "test -f ~/.tmux/tmuxline" "source ~/.tmux/tmuxline"

# enable vim mode
set-option -g mode-keys vi
set-option -g status-keys vi

# copy mode as in vim
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'q' clear-selection
bind -t vi-copy 'Escape' cancel
bind -t vi-copy 'C-d' halfpage-down
bind -t vi-copy 'C-u' halfpage-up

# copy-paste key bindings
# tmux only:
# unbind y
# bind y copy-mode
# unbind p
# bind p paste-buffer
# bind -t vi-copy 'y' copy-selection
# Vim style:
unbind y
bind y copy-mode
bind-key -t vi-copy y copy-pipe "xsel -i -p -b"
unbind p
bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"

#  # extra commands for interacting with the ICCCM clipboard
#  bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
#  bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux
#  paste-buffer"

# Smart pane switching with awareness of vim splits
 is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
 bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
 bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
 bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
 bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
 bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"



# TMUX PLUGINS
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'

# PLUGINS OPTIONS
# tmux-resurrect:
# List of programs to be restored:
set-option -g @resurrect-processes 'vman ssh weechat cmus vi vim nvim emacs man mutt tig less more tail top htop irssi ssh'
# Restore all programs (be careful with this!):
# set -g @resurrect-processes ':all:'
# Restore pane contents:
set-option -g @resurrect-capture-pane-contents 'on'
# for vim:
# set-option -g @resurrect-strategy-vim 'session'
# for neovim:
# set-option -g @resurrect-strategy-nvim 'session'

# Initializes TMUX plugin manager.
# Keep this line at the very bottom of tmux.conf.
run '~/.tmux/plugins/tpm/tpm'
